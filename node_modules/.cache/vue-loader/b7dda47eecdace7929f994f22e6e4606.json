{"remainingRequest":"/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/vue-keypress/src/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/vue-keypress/src/index.vue","mtime":499162500000},{"path":"/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sebastiankahkonen/Documents/GitHub/Flappybird-testgame/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmNvbnN0IHN1cHBvcnRlZE1vZGlmaWVycyA9IFsnYWx0S2V5JywgJ21ldGFLZXknLCAnY3RybEtleScsICdzaGlmdEtleSddCgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGtleUV2ZW50OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2tleXVwJywKICAgIH0sCgogICAgLy8gT25seSBmb3Igc2luZ2xlIGtleSBjb2RlOgogICAga2V5Q29kZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogICAgbW9kaWZpZXJzOiB7CiAgICAgIHR5cGU6IEFycmF5LCAvLyBbJ3NoaWZ0S2V5JywgJ2N0cmxLZXknLCAnYWx0S2V5JywgJ21ldGFLZXknXQogICAgICBkZWZhdWx0OiAoKSA9PiBbXSwKICAgIH0sCiAgICBwcmV2ZW50RGVmYXVsdDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgfSwKCiAgICAvLyBPbmx5IGZvciBtdWx0aXBsZSBrZXkgY29kZXM6CiAgICBtdWx0aXBsZUtleXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLAogICAgfSwKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBrZXlMaXN0ZW5lcnM6IFtdLAogIH0pLAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNldHVwTGlzdGVuZXJzKCkKICB9LAogIGRlc3Ryb3llZCgpIHsKICAgIGZvciAoY29uc3QgeyBrZXlFdmVudCwgbGlzdGVuZXIgfSBvZiB0aGlzLmtleUxpc3RlbmVycykgewogICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihrZXlFdmVudCwgbGlzdGVuZXIpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKiogSW5pdGlhbCBTZXR1cCBvZiB0aGUgbGlzdGVuZXJzICovCiAgICAvKiogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovCiAgICBzZXR1cExpc3RlbmVycygpIHsKICAgICAgY29uc3QgZXhwZWN0ZWRFdmVudCA9IHsKICAgICAgICBrZXlFdmVudDogdGhpcy5rZXlFdmVudCwKCiAgICAgICAgLy8gSWYgc2luZ2xlOgogICAgICAgIGtleUNvZGU6IHRoaXMua2V5Q29kZSwKICAgICAgICBwcmV2ZW50RGVmYXVsdDogdGhpcy5wcmV2ZW50RGVmYXVsdCwKICAgICAgICBtb2RpZmllcnM6IHRoaXMubW9kaWZpZXJzLAogICAgICAgIC8vIElmIG11bHRpcGxlOgogICAgICAgIG11bHRpcGxlS2V5czogdGhpcy5tdWx0aXBsZUtleXMsCiAgICAgIH0KICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKGV4cGVjdGVkRXZlbnQpCiAgICB9LAogICAgYWRkRXZlbnRMaXN0ZW5lcihleHBlY3RlZEV2ZW50KSB7CiAgICAgIGxldCBsaXN0ZW5lciA9IHRoaXMuZXZlbnRIYW5kbGVyKGV4cGVjdGVkRXZlbnQpCiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKGV4cGVjdGVkRXZlbnQua2V5RXZlbnQsIGxpc3RlbmVyKQogICAgICB0aGlzLmtleUxpc3RlbmVycy5wdXNoKHsgZXhwZWN0ZWRFdmVudCwgbGlzdGVuZXIgfSkKICAgIH0sCgogICAgLyoqIEhhbmRsaW5nIHBlciBrZXlwcmVzcyBldmVudCAqLwogICAgLyoqICoqKioqKioqKioqKioqKioqKioqKioqKioqKiAqLwogICAgZXZlbnRIYW5kbGVyKGV4cGVjdGVkRXZlbnQpIHsKICAgICAgcmV0dXJuIChldmVudCkgPT4gewogICAgICAgIGNvbnN0IGVtaXRSZXNwb25zZSA9IChlbWl0RXZlbnQsIG1lc3NhZ2UpID0+IHsKICAgICAgICAgIHRoaXMuJGVtaXQoZW1pdEV2ZW50LCB7CiAgICAgICAgICAgIGV2ZW50LAogICAgICAgICAgICBleHBlY3RlZEV2ZW50LAogICAgICAgICAgICBtZXNzYWdlLAogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgLy8gRW1pdCB0aGUgZW1pdEV2ZW50ICdAYW55JyBpbiBhbnkgY2FzZToKICAgICAgICBlbWl0UmVzcG9uc2UoJ2FueScsICdBbnkga2V5IHdhcyBwcmVzc2VkLicpCgogICAgICAgIGNvbnN0IGluTXVsdGlwbGVLZXlzTW9kZSA9IGV4cGVjdGVkRXZlbnQubXVsdGlwbGVLZXlzLmxlbmd0aCA+IDAKCiAgICAgICAgLy8gSW4gImFueSBrZXkiIG1vZGUsIGVtaXQgJ0BzdWNjZXNzJyBhbmQgcmV0dXJuCiAgICAgICAgY29uc3QgaW5BbnlLZXlNb2RlID0gIWV4cGVjdGVkRXZlbnQua2V5Q29kZSAmJiAhaW5NdWx0aXBsZUtleXNNb2RlCiAgICAgICAgaWYgKGluQW55S2V5TW9kZSkgewogICAgICAgICAgZW1pdFJlc3BvbnNlKCdzdWNjZXNzJywgJ0FueSBrZXkgd2FzIHByZXNzZWQuJykKICAgICAgICAgIHJldHVybgogICAgICAgIH0KCiAgICAgICAgLy8gU2V0IGV4cGVjdGVkIGlucHV0cyBhcnJheSByZXNwZWN0aXZlIHRvIHByb3BzIGJlaW4gInNpbmdsZSIgb3IgIm11bHRpcGxlIgogICAgICAgIGxldCBleHBlY3RlZElucHV0cyA9IFtleHBlY3RlZEV2ZW50XQogICAgICAgIGlmIChpbk11bHRpcGxlS2V5c01vZGUpIHsKICAgICAgICAgIGV4cGVjdGVkSW5wdXRzID0gZXhwZWN0ZWRFdmVudC5tdWx0aXBsZUtleXMKICAgICAgICB9CgogICAgICAgIGZvciAoY29uc3QgZXhwZWN0ZWRJbnB1dCBvZiBleHBlY3RlZElucHV0cykgewogICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGNvcnJlY3Qga2V5cyBoYXZlIGJlZW4gY2xpY2tlZDoKICAgICAgICAgIGNvbnN0IGNvcnJlY3RLZXlQcmVzc2VkID0gZXhwZWN0ZWRJbnB1dC5rZXlDb2RlID09PSBldmVudC5rZXlDb2RlCiAgICAgICAgICBpZiAoIWNvcnJlY3RLZXlQcmVzc2VkKSBjb250aW51ZQoKICAgICAgICAgIC8vIEdldCBtb2RpZmllcnM6CiAgICAgICAgICBsZXQgaGFzTW9kaWZpZXJzID0gZXhwZWN0ZWRJbnB1dC5tb2RpZmllcnMubGVuZ3RoID4gMAoKICAgICAgICAgIC8vIENoZWNrIGlmIG9ubHkgdGhlIHNwZWNpZmllZCBtb2RpZmllcnMgd2VyZSBwcmVzc2VkCiAgICAgICAgICBpZiAoaGFzTW9kaWZpZXJzKSB7CiAgICAgICAgICAgIGNvbnN0IG1vZGlmaWVyc1ByZXNzZWQgPSBzdXBwb3J0ZWRNb2RpZmllcnMuZXZlcnkoCiAgICAgICAgICAgICAgKHgpID0+IGV2ZW50W3hdID09IChleHBlY3RlZElucHV0Lm1vZGlmaWVycy5pbmRleE9mKHgpICE9PSAtMSkKICAgICAgICAgICAgKQogICAgICAgICAgICBpZiAoIW1vZGlmaWVyc1ByZXNzZWQpIGNvbnRpbnVlCiAgICAgICAgICB9CgogICAgICAgICAgLy8gU1VDQ0VTUyAtPiBpZiBpdCBnb3QgdG8gaGVyZSwgdGhpcyB3YXMgdGhlIGNvcnJlY3Qga2V5LgoKICAgICAgICAgIC8vIFNldCBQcmV2ZW50LURlZmF1bHQKICAgICAgICAgIGlmIChleHBlY3RlZEV2ZW50LnByZXZlbnREZWZhdWx0KSB7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCkKICAgICAgICAgIH0KICAgICAgICAgIGVtaXRSZXNwb25zZSgnc3VjY2VzcycsICdDb3JyZWN0IGtleShzKSBwcmVzc2VkLicpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CgogICAgICAgIC8vIEZBSUxVUkU6IElmIGl0IGdvdCB0byBoZXJlLCB0aGUgY29ycmVjdCBrZXkgd2Fzbid0IHByZXNzZWQ6CiAgICAgICAgZW1pdFJlc3BvbnNlKCd3cm9uZycsICdXcm9uZyBrZXkocykgcHJlc3NlZC4nKQogICAgICB9CiAgICB9LAogIH0sCiAgcmVuZGVyOiAoKSA9PiBudWxsLAp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vue-keypress/src","sourcesContent":["<script>\nconst supportedModifiers = ['altKey', 'metaKey', 'ctrlKey', 'shiftKey']\n\nexport default {\n  props: {\n    keyEvent: {\n      type: String,\n      default: 'keyup',\n    },\n\n    // Only for single key code:\n    keyCode: {\n      type: Number,\n      default: null,\n    },\n    modifiers: {\n      type: Array, // ['shiftKey', 'ctrlKey', 'altKey', 'metaKey']\n      default: () => [],\n    },\n    preventDefault: {\n      type: Boolean,\n    },\n\n    // Only for multiple key codes:\n    multipleKeys: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data: () => ({\n    keyListeners: [],\n  }),\n  mounted() {\n    this.setupListeners()\n  },\n  destroyed() {\n    for (const { keyEvent, listener } of this.keyListeners) {\n      window.removeEventListener(keyEvent, listener)\n    }\n  },\n  methods: {\n    /** Initial Setup of the listeners */\n    /** ****************************** */\n    setupListeners() {\n      const expectedEvent = {\n        keyEvent: this.keyEvent,\n\n        // If single:\n        keyCode: this.keyCode,\n        preventDefault: this.preventDefault,\n        modifiers: this.modifiers,\n        // If multiple:\n        multipleKeys: this.multipleKeys,\n      }\n      this.addEventListener(expectedEvent)\n    },\n    addEventListener(expectedEvent) {\n      let listener = this.eventHandler(expectedEvent)\n      window.addEventListener(expectedEvent.keyEvent, listener)\n      this.keyListeners.push({ expectedEvent, listener })\n    },\n\n    /** Handling per keypress event */\n    /** *************************** */\n    eventHandler(expectedEvent) {\n      return (event) => {\n        const emitResponse = (emitEvent, message) => {\n          this.$emit(emitEvent, {\n            event,\n            expectedEvent,\n            message,\n          })\n        }\n        // Emit the emitEvent '@any' in any case:\n        emitResponse('any', 'Any key was pressed.')\n\n        const inMultipleKeysMode = expectedEvent.multipleKeys.length > 0\n\n        // In \"any key\" mode, emit '@success' and return\n        const inAnyKeyMode = !expectedEvent.keyCode && !inMultipleKeysMode\n        if (inAnyKeyMode) {\n          emitResponse('success', 'Any key was pressed.')\n          return\n        }\n\n        // Set expected inputs array respective to props bein \"single\" or \"multiple\"\n        let expectedInputs = [expectedEvent]\n        if (inMultipleKeysMode) {\n          expectedInputs = expectedEvent.multipleKeys\n        }\n\n        for (const expectedInput of expectedInputs) {\n          // Check if the correct keys have been clicked:\n          const correctKeyPressed = expectedInput.keyCode === event.keyCode\n          if (!correctKeyPressed) continue\n\n          // Get modifiers:\n          let hasModifiers = expectedInput.modifiers.length > 0\n\n          // Check if only the specified modifiers were pressed\n          if (hasModifiers) {\n            const modifiersPressed = supportedModifiers.every(\n              (x) => event[x] == (expectedInput.modifiers.indexOf(x) !== -1)\n            )\n            if (!modifiersPressed) continue\n          }\n\n          // SUCCESS -> if it got to here, this was the correct key.\n\n          // Set Prevent-Default\n          if (expectedEvent.preventDefault) {\n            event.preventDefault()\n          }\n          emitResponse('success', 'Correct key(s) pressed.')\n          return\n        }\n\n        // FAILURE: If it got to here, the correct key wasn't pressed:\n        emitResponse('wrong', 'Wrong key(s) pressed.')\n      }\n    },\n  },\n  render: () => null,\n}\n</script>"]}]}